curve((6-x)*floor(2000/x)+2000, from=0, to=6000)
abline(h=1999, lty=2)
curve((6-x)*floor(2000/x)+2000, from=0, to=0.6*2000)
curve((6-x)*floor(10000/x)+10000, from=0, to=0.6*10000)
abline(h=1999, lty=2)
(6-3500)*floor(10000/3500)+10000
curve((6-x)*floor(10000/x)+10000, from=0, to=0.6*10000, xlab='t', ylab='Number of transitions used')
legend(x='topleft', lty=c(1,2), legend=c('Bucketing', 'Naive'))
abline(h=1999, lty=2)
curve((6-x)*floor(2000/x)+2000, from=0, to=2000, xlab='t', ylab='Number of transitions used')
curve((6-x)*floor(2000/x)+2000, from=0, to=2000, xlab='t', ylab='Number of transitions used', ylim=c(0,2000))
abline(h=1999, lty=2)
legend(x='topleft', lty=c(1,2), legend=c('Bucketing', 'Naive'))
curve((6-x)*floor(10000/x)+10000, from=0, to=0.6*10000, xlab='t', ylab='Number of transitions used')
legend(x='left', lty=c(1,2), legend=c('Bucketing', 'Naive'))
curve((6-x)*floor(10000/x)+10000, from=0, to=0.6*10000, xlab='t', ylab='Number of transitions used')
curve((6-x)*floor(2000/x)+2000, from=0, to=2000, xlab='t', ylab='Number of transitions used', ylim=c(0,2000))
legend(x=0, y=1500, lty=c(1,2), legend=c('Bucketing', 'Naive'))
abline(h=1999, lty=2)
curve((6-x)*floor(10000/x)+10000, from=0, to=0.6*10000, xlab='t', ylab='Number of transitions used')
legend(x=0, y=3750, lty=c(1,2), legend=c('Bucketing', 'Naive'))
abline(h=1999, lty=2)
(6-2)*floor(10000/2)+10000
10000%%2500
10000%%2501
encode.vigenere('vigenere', letters, keyword='key')
source('~/Dissertation/r/encode.R')
encode.vigenere('vigenere', letters, keyword='key')
which(letters=='a')
substr('hello',1,1)
which(letters==substr('hello',1,1))
encode.vigenere('vigenere', alph, keyword='key')
encode.vigenere('vigenere', letters, keyword='key')
source('~/Dissertation/r/encode.R')
encode.vigenere('vigenere', letters, keyword='key')
source('~/Dissertation/r/encode.R')
encode.vigenere('vigenere', letters, keyword='key')
encode.vigenere('vigenere', alph, keyword='key')
encode.vigenere('vigenere', alph, keyword='key')
max(logP)
max(P)
P
which.max(P)
P[254]
254/79
P[,3]
P[1:79,1:3]
diag(P)
max(diag(P))
min(P)
log(min(P))
exp(40*log(min(P)))
exp(40*log(max(P)))
source('~/Dissertation/r/trans.R')
solve.trans('cryptography', 7, alph, 1)
log.likelihood('cryptography')
c('h', 5)
source('~/Dissertation/r/trans.R')
solve.trans('cryptography', 7, alph, 1)
library(liqueueR)
solve.trans('cryptography', 7, alph, 1)
source('~/Dissertation/r/trans.R')
solve.trans('cryptography', 7, alph, 1)
source('~/Dissertation/r/trans.R')
solve.trans('cryptography', 7, alph, 1)
log.likelihood("ptcryoghyrap")
source('~/Dissertation/r/trans.R')
solve.trans('cryptography', 7, alph, 1)
log.likelihood("ryptogcraphy")
source('~/Dissertation/r/trans.R')
log.likelihood("ryptogcraphy")
solve.trans('cryptography', 7, alph, 1)
log.likelihood("rcyptogarphy")
source('~/Dissertation/r/trans.R')
solve.trans('cryptography', 7, alph, 1)
log.likelihood("cgryptoryaph")
use.key.trans('cryptography', c(1,7,2,3,4,5,6))
logbeta[which(alph=='c')]
logP['o','r']
solve.trans('cryptog', 7, alph, 1)
log.likelihood("gcrypto")
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 10)
log.likelihood("adefbcghklmijn")
solve.trans('abcdefghijklmn', 7, alph, 10)
log.likelihood("deabcfgklhijmn")
source('~/Dissertation/r/trans.R')
solve.trans('abcdefghijklmn', 7, alph, 1)
log.likelihood("gabcdefnhijklm")
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
log.likelihood("fgabcdemnhijkl")
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
log.likelihood("cdabefgjkhilmn")
l <- log.likelihood('abcdefghijklmn')-logbeta[which(alph=='a')]+logbeta[which(alph=='c')]
l <- l - (logP['b','c']+logP['i','j']+logP['d','e']+logP['k','l']+logP['g','h'])
l
l <- l + (logP['d','a']+logP['k','h']+logP['b','e']+logP['i','l']+logP['g','j'])
l
source('~/Dissertation/r/trans.R')
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
log.likelihood("deabcfgklhijmn")
two.buckets(c('a','b','c'), c('d','e','f'))
logP['a','d']+logP['b','e']+logP['c','f']
length(c('a','b','c'))
source('~/Dissertation/r/trans.R')
two.buckets(c('a','b','c'), c('d','e','f'))
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
log.likelihood("efabcdglmhijkn")
solve.trans('abcdefghijklmn', 7, alph, 1)
solve.trans('abcdefghijklmn', 7, alph, 1)
log.likelihood("defgabcklmnhij")
source('~/Dissertation/r/trans.R')
solve.trans('abcdefghijklmn', 7, alph, 2)
source('~/Dissertation/r/trans.R')
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
source('~/Dissertation/r/trans.R')
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
log.likelihood("abcdefghijklmn")
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
solve.trans('abcdefghijklmn', 7, alph, 2)
log.likelihood("dgabefcknhilmj")
10000%%5001
library(liqueueR)
e.vigenere <- encode.vigenere(extract, alph, keyword='KEY')
e.vigenere
write.polysub('./outputs/vigenere.txt', e.vigenere, 3, alph, 5e+06, original=extract)
write.polysub('./outputs/vigenere.txt', e.vigenere, 3, alph, 1e+07, original=extract)
set.seed(98)
write.polysub('./outputs/vigenere.txt', e.vigenere, 3, alph, 5e+07, original=extract)
source('~/Dissertation/r/polysub.R')
set.seed(1234)
write.polysub('./outputs/vigenere.txt', e.vigenere, 3, alph, 5e+07, original=extract)
write.polysub('./outputs/vigenere.txt', e.vigenere, 3, alph, 5e+08, original=extract)
library(liqueueR)
curve(6*floor(10000/x), from=2, to=10000)
curve(6*floor(10000/x), from=2, to=100)
curve((6-x)*floor(10000/x)+10000, from=2, to=100)
curve((6-x)*floor(10000/x)+10000, from=2, to=10000)
curve(6*floor(10000/x), from=2, to=10000, add=TRUE, col='red')
abline(h=2000, col='blue')
source('~/Dissertation/r/tests.R')
bucket.comparisons(10000)
source('~/Dissertation/r/tests.R')
bucket.comparisons(10000)
source('~/Dissertation/r/tests.R')
bucket.comparisons(10000)
bucket.comparisons(20000)
bucket.comparisons(100000)
bucket.comparisons(100)
bucket.comparisons(2000)
source('~/Dissertation/r/tests.R')
bucket.comparisons(2000)
source('~/Dissertation/r/tests.R')
bucket.comparisons(2000)
bucket.comparisons(20000)
source('~/Dissertation/r/tests.R')
bucket.comparisons(20000)
source('~/Dissertation/r/tests.R')
bucket.comparisons(20000)
source('~/Dissertation/r/tests.R')
bucket.comparisons(20000)
dev.off()
bucket.comparisons(2000)
source('~/Dissertation/r/tests.R')
dev.off()
bucket.comparisons(2000)
bucket.comparisons(20000)
round(3.4)
round(3.5)
/
2000/3
667*3
source('~/Dissertation/r/trans.R')
substring(extract, 5, TRUE)
substring(extract, 5, FALSE)
substring(magicshop, 5, FALSE)
magicshop <- read.text('../resources/magicshop.txt', alph)
magicshop <- read.text('../resources/magicshop.txt', alph)
magicshop
substring(magicshop, 5, FALSE)
nchar(substring(magicshop, 5, FALSE))
substring(magicshop, 5, FALSE)
nchar(substring(magicshop, 8, FALSE))
2666/8
nchar(substring(magicshop, 8, TRUE))
2000/8
nchar(substring(magicshop, 9, TRUE))
nchar(substring(magicshop, 153, TRUE))
nchar(substring(magicshop, 39, TRUE))
153/39
1989/153
12.3%%3
source('~/Dissertation/r/trans.R')
nchar(substring(magicshop, 8, FALSE))
16000/6
nchar(magicshop)
source('~/Dissertation/r/trans.R')
nchar(substring(magicshop, 8, FALSE))
2664/8
6*(2000*8/6)/87
6*(2000*8/6)/8
source('~/Dissertation/r/trans.R')
e.trans <- encode.trans(magicshop, alph, 13)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
library(liqueueR)
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
2002/13
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
strsplit(magicshop, '')[[1]][1]
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
logbeta
source('~/Dissertation/r/trans.R')
logbeta
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
logbeta['t']
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, 50000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, alph, 50000, fast=TRUE, original=magicshop)
write.trans('./outputs/transfast.txt', e.trans, 13, alph, 50000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfast.txt', e.trans, 13, alph, 50000, fast=TRUE, original=magicshop)
write.trans('./outputs/transfast.txt', e.trans, 13, alph, 10000, fast=TRUE, original=magicshop)
write.trans('./outputs/transslow.txt', e.trans, 13, alph, 10000, fast=FALSE, original=magicshop)
source('~/Dissertation/r/trans.R')
write.trans('./outputs/transfastfew.txt', e.trans, 13, alph, 1000, fast=TRUE, original=magicshop)
source('~/Dissertation/r/tests.R')
test.trans(magicshop, alph, c(4,5), c(1000,2000,5000,10000), 2)
source('~/Dissertation/r/tests.R')
test.trans(magicshop, alph, c(4,5), c(1000,2000,5000,10000), 2)
?par
test.trans(magicshop, alph, c(4,5), c(1000,2000,5000,10000), 2)
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
source('~/Dissertation/r/tests.R')
warnings()
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
warnings()
solve.sub(e.sub, alph, 1e+05)[[1]]
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
sub.length(extract, 10, 1)
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
0.05*1e+04
0.05*1e+05
0.02*1e+05
floor(50*(c(5,10,15,20)/100))
5000*0.01
0.1*5000
source('~/Dissertation/r/tests.R')
rm(polysub.test)
source('~/Dissertation/r/tests.R')
6e+07+3.9e+07+1e+09
1.1e+09/10000
110000*2/60/60
3e+07+3.9e+07+3e+08
(3e+07+3.9e+07+3e+08)/10000/60/60
test.suite()
test.suite()
source('~/Dissertation/r/tests.R')
test.suite()
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+06, 1e+07, 1e+08), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+06, 1e+07, 1e+08), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+06, 1e+07, 1e+08), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+06, 1e+07, 1e+08), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+06, 1e+07, 1e+08), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+01, 1e+02, 1e+0.), 3)
test.polysub(extract, 2:5, c(1e+01, 1e+02, 1e+03), 3)
test.polysub(extract, 2:5, c(1e+02, 1e+03, 1e+04), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+02, 1e+03, 1e+04), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+02, 1e+03, 1e+04), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+02, 1e+03, 1e+04), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+02, 1e+03, 1e+04), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+02, 1e+03, 1e+04), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+02, 1e+03, 1e+04), 3)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:5, c(1e+06, 1e+07, 1e+08), 3)
source('~/Dissertation/r/tests.R')
?abline
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05)
bucket.comparisons(1e+02)
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+02)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+02)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+02)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+02)
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+02)
bucket.comparisons(1e+05)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05, 1e+02)
(2000*100/6) - ((2000*100/6)%%100))
(2000*100/6) - ((2000*100/6)%%100)
min(10000, (2000*i/6) - ((2000*i/6)%%i))
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05, 1e+02)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05, 1e+02)
min(33300, 1e+05)
as.numeric(1e+05)
bucket.comparisons(1e+05, 1e+04)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05, 1e+03)
bucket.comparisons(1e+05, 500)
source('~/Dissertation/r/tests.R')
source('~/Dissertation/r/sub.R')
source('~/Dissertation/r/sub.R')
library(liqueueR)
write.sub('./outputs/subzero.txt', e.sub, alph, 1e+05, extract)
write.sub('./outputs/subzero.txt', e.sub, alph, 1e+06, extract)
source('~/Dissertation/r/sub.R')
source('~/Dissertation/r/polysub.R')
source('~/Dissertation/r/trans.R')
e.trans <- encode.trans(magicshop, alph, 23)
write.trans('./outputs/transzero.txt', e.trans, 23, alph, 5e+04, fast=TRUE, original=magicshop)
source('~/Dissertation/r/trans.R')
e.polysub <- encode.polysub(extract, alph, 5)
write.polysub('./outputs/polysubzero.txt', e.polysub, 5, alph, 1e+07, original=extract)
source('~/Dissertation/r/tests.R')
test.trans(magicshop, alph, 5:40, c(1e+03, 5e+03, 1e+04, 5e+04), 5)
library(liqueueR)
test.trans(magicshop, alph, 5:40, c(1e+03, 5e+03, 1e+04, 5e+04), 5)
test.polysub(extract, 2:10, c(1e+06, 1e+07), 2)
source('~/Dissertation/r/tests.R')
test.polysub(extract, 2:10, c(1e+06, 1e+07), 2)
plot(2:10, c(0.18, 0.94, 0.1, 0.22, 0.23, 0.235, 0.21, 0.205, 0.23, 0.19), xlab='p', ylab='Maximum accuracy', main='Maximum accuracy of decoding polysub ciphers for varying iterations with 2 repeats')
plot(2:10, c(0.18, 0.94, 0.1, 0.22, 0.23, 0.235, 0.21, 0.205, 0.23), xlab='p', ylab='Maximum accuracy', main='Maximum accuracy of decoding polysub ciphers for varying iterations with 2 repeats')
plot(2:10, c(0.18, 0.94, 0.1, 0.22, 0.23, 0.235, 0.21, 0.205, 0.23), xlab='p', ylab='Maximum accuracy', main='Maximum accuracy of decoding polysub ciphers for varying iterations with 2 repeats', type='l')
plot(2:10, c(0.18, 0.94, 0.1, 0.22, 0.23, 0.235, 0.21, 0.205, 0.23), xlab='p', ylab='Maximum accuracy', main='Maximum accuracy of decoding polysub ciphers for varying iterations with 2 repeats', type='l', xaxt='n')
axis(side=1, at=2:10, cex.axis=1)
lines(2:10, c(0.97, 0.94, 0.82, 0.87, 0.93, 0.62, 0.58, 0.46, 0.26), lty=2)
plot(2:10, c(0.18, 0.94, 0.1, 0.22, 0.23, 0.235, 0.21, 0.205, 0.23), xlab='p', ylab='Maximum accuracy', main='Maximum accuracy of decoding polysub ciphers for varying iterations with 2 repeats', type='l', xaxt='n', ylim=c(0,1))
axis(side=1, at=2:10, cex.axis=1)
lines(2:10, c(0.97, 0.94, 0.82, 0.87, 0.93, 0.62, 0.58, 0.46, 0.26), lty=2)
abline(h=0, lty=3)
abline(h=1, lty=3)
legend('topright', legend=formatC(c(1e+06, 1e+07), format = "e", digits = 0),
lty=1:2, col='black', title="Iterations")
source('~/Dissertation/r/trans.R')
source('~/Dissertation/r/trans.R')
source('~/Dissertation/r/trans.R')
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05, 1e+03)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05, 1e+03)
source('~/Dissertation/r/tests.R')
bucket.comparisons(1e+05, 1e+03)
bucket.comparisons(1e+05, 1e+02)
bucket.comparisons(1e+05, 1e+03)
bucket.comparisons(1e+05, 500)
source('~/Dissertation/r/tests.R')
test.trans(magicshop, alph, 5:40, c(1e+03, 1e+04, 5e+04), 4)
library(liqueueR)
dev.off()
test.trans(magicshop, alph, 5:40, c(1e+03, 1e+04, 5e+04), 4)
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=(0,100))
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=(0,100))
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(3,3,3,3,3,2,3,2,2,2,2,2,2,1,1,1,rep(0,20)))
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(3,3,3,3,3,2,3,2,2,2,2,2,2,1,1,1,rep(0,20))*100/3)
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(3,3,3,3,3,2,3,2,3,2,2,2,2,1,1,1,rep(0,20))*100/3)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,1,3,1,1,0,0,0,0,0,0,0,0)*100/3, lty=2)
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(3,3,3,3,3,2,3,2,3,2,2,2,2,1,1,1,rep(0,20))*100/3)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,1,3,1,1,1,2,1,2,2,0)*100/3, lty=2)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,1,3,1,1,1,2,1,2,2,0,0)*100/3, lty=2)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,1,3,1,1,1,2,1,2,2,0,0,0)*100/3, lty=2)
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(3,3,3,3,3,2,3,2,3,2,2,2,2,1,1,1,rep(0,20))*100/3)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,1,3,1,1,1,2,1,2,2,0,0,0)*100/3, lty=2)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3)*100/3, lty=3)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3)*100/3, lty=3)
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(3,3,3,3,3,2,3,2,3,2,2,2,2,1,1,1,rep(0,20))*100/3)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,1,3,1,1,1,2,1,2,2,0,0,0)*100/3, lty=2)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3)*100/3, lty=3)
legend('bottomright', legend=c('1e+03', '1e+04', '5e+04'), lty=1:3, col='black', title='Iterations')
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(3,3,3,3,3,2,3,2,3,2,2,2,2,1,1,1,rep(0,20))*100/3)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,1,3,1,1,1,2,1,2,2,0,0,0)*100/3, lty=2)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3)*100/3, lty=3)
legend('bottomleft', legend=c('1e+03', '1e+04', '5e+04'), lty=1:3, col='black', title='Iterations')
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(3,3,3,3,3,2,3,2,3,2,2,2,2,1,1,1,rep(0,20))*100/3)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,1,3,1,1,1,2,1,2,2,0,0,0)*100/3, lty=2)
lines(5:40, c(3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3)*100/3, lty=3)
legend('bottomleft', legend=formatC(c(1e+03, 1e+04, 5e+04), format='e', digits=0), lty=1:3, col='black', title='Iterations')
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(5,5,5,5,5,5,5,3,4,4,3,4,3,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)*100/3)
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(5,5,5,5,5,5,5,3,4,4,3,4,3,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)*100/5)
lines(5:40, c(5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,4,2,3,5,2,2,2,2,2,3,0,0,3,0,1,1,0,1,0)*100/5, lty=2)
lines(5:40, rep(5,36)*100/5, lty=3)
legend('bottomleft', legend=formatC(c(1e+03, 1e+04, 5e+04), format='e', digits=0), lty=1:3, col='black', title='Iterations')
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(5,5,5,5,5,5,5,3,4,4,3,4,3,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)*100/5)
lines(5:40, c(5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,4,2,3,5,2,2,2,2,2,3,0,0,3,0,1,1,0,1,0)*100/5, lty=2)
lines(5:40, rep(5,36)*100/5, lty=3)
legend('bottomleft', legend=formatC(c(1e+03, 1e+04, 5e+04), format='e', digits=0), lty=1:3, col='black', title='Iterations')
plot(0, type='n', xlab='Cipher key length', ylab='Perfect decryptions (%)', xlim=c(5,40), ylim=c(0,100))
lines(5:40, c(5,5,5,5,5,5,5,3,4,4,3,4,3,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)*100/5)
lines(5:40, c(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,4,5,3,5,4,4,5,3,3,4,1,2,3,1,3,2)*100/5, lty=2)
lines(5:40, rep(5,36)*100/5, lty=3)
legend('bottomleft', legend=formatC(c(1e+03, 1e+04, 5e+04), format='e', digits=0), lty=1:3, col='black', title='Iterations')
